@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }
}
<!--product breadcrumb-->
@Html.Action("ProductBreadcrumb", "Catalog", new { productId = Model.Id })
<div class="page product-details-page">
    <div class="page-body">
        @Html.Widget("productdetails_top")
        @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                <div class="product-essential">
                    @Html.Widget("productdetails_before_pictures")
                    <!--product pictures-->
                    @Html.Partial("_ProductDetailsPictures", Model)
                    @Html.Widget("productdetails_after_pictures")
                    <div class="overview">
                        <div class="product-name">
                            <h1 itemprop="name">
                                @Model.Name
                            </h1>
                        </div>
                        @if (!String.IsNullOrEmpty(Model.ShortDescription))
                        {
                            <div class="short-description">
                                @Html.Raw(Model.ShortDescription)
                            </div>
                        }
                        @Html.Widget("productdetails_overview_top")
                        <!--product SKU, manufacturer part number, stock info-->
                        @Html.Partial("_SKU_Man_Stock", Model)
                        <!--product manufacturers-->
                        @Html.Action("ProductManufacturers", "Catalog", new { productId = Model.Id })
                        <!--associated products-->
                        <div class="product-variant-list">
                        @*secc changes*@
                       @* @foreach (var variant in Model.AssociatedProducts)
                        {
                            <div class="product-variant-line" data-productid="@variant.Id">
                                @if (!String.IsNullOrWhiteSpace(variant.DefaultPictureModel.ImageUrl))
                                {
                                    <div class="variant-picture">
                                        <img alt="@variant.DefaultPictureModel.AlternateText" src="@variant.DefaultPictureModel.ImageUrl"
                                             title="@variant.DefaultPictureModel.Title" id="main-product-img-@variant.Id" />
                                    </div>
                                }
                                <div class="variant-overview">
                                    @if (!String.IsNullOrWhiteSpace(variant.Name))
                                    {
                                        <div class="variant-name">
                                            @variant.Name
                                        </div>
                                    }
                                    @if (!String.IsNullOrWhiteSpace(variant.ShortDescription))
                                    {
                                        <div class="variant-description">
                                            @Html.Raw(variant.ShortDescription)
                                        </div>
                                    }
                                    @Html.Partial("_DownloadSample", variant)
                                    @Html.Action("ProductTierPrices", "Catalog", new { productId = variant.Id })
                                    @{
                                    var dataDictAttributes = new ViewDataDictionary();
                                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", variant.Id);
                                        @Html.Partial("_ProductAttributes", variant.ProductVariantAttributes, dataDictAttributes)                  
                                    }
                                    <!--product SKU, manufacturer part number, stock info-->
                                    @Html.Partial("_SKU_Man_Stock", variant)
                                    <!--Back in stock subscription-->
                                    @Html.Partial("_BackInStockSubscription", variant)
                                    @{
                                    var dataDictGiftCard = new ViewDataDictionary();
                                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", variant.Id);
                                        @Html.Partial("_GiftCardInfo", variant.GiftCard, dataDictGiftCard)
                                    }
                                    @{
                                    var dataDictPrice = new ViewDataDictionary();
                                    dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", variant.Id);
                                        @Html.Partial("_ProductPrice", variant.ProductPrice, dataDictPrice)
                                    }
                                    @{
                                    var dataDictAddToCart = new ViewDataDictionary();
                                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", variant.Id);
                                        @Html.Partial("_AddToCart", variant.AddToCart, dataDictAddToCart)
                                    }
                                </div>
                            </div>
                        }
                        @if (Model.AssociatedProducts.Count == 0)
                        {
                            <div class="no-associated-products">
                                @T("Products.NoAssociatedProducts")
                            </div>
                        }*@
                        <script>
                            function doThis() {
                                $('div.add-to-cart').hide();
                                var e = document.getElementById('ddlProductVariants');
                                var idValue = e.options[e.selectedIndex].value;
                                $('div[id=addtocart_container]').show();
                                $('div[id=addtocart_' + idValue + ']').show();
                                if (idValue == '') {
                                    $('div[id=temp-controls]').show();
                                    alert('Please select a format');
                                }
                            }

                            //function takeAction() {
                            //    var e = document.getElementById('ddlProductVariants');
                            //    var idValue = e.options[e.selectedIndex].value;
                            //    if (idVelue == '') {
                            //        alert('Please select a format');
                            //    }
                            //}
                        </script>
                        <strong>Format:</strong><br />
                        @Html.DropDownList("ddlProductVariants",
                        new SelectList((from variant in Model.AssociatedProducts
                                       select new { IdValue = variant.Id, TextValue = variant.Name + " - " + variant.ProductPrice.Price }), "IdValue", "TextValue"), "please select", new { @class = "short-description", @onchange ="doThis();"})
                  
                        @foreach (var variant in Model.AssociatedProducts)
	                    {
                            var dataDictAddToCart = new ViewDataDictionary();
                            dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", variant.Id);
                            <div id="addtocart_container" style="display:none;">@Html.Partial("_AddToCart", variant.AddToCart, dataDictAddToCart)</div>
	                    }
                        <div id="temp-controls" class="add-to-cart">
                            <label class="qty-label">Qty:</label>
                            <input class="qty-input" type="text" value="1" disabled="disabled" />                
                            <input type="button" class="button-1 add-to-cart-button" value="Add to cart" disabled="disabled"/>
                            <input type="button" class="button-2 add-to-wishlist-button" value="Add to wishlist" disabled="disabled" />
                        </div>
                        <input type="hidden" id="refreshed" value="no"/>
                        <script type="text/javascript">
                            onload = function () {
                                var e = document.getElementById("refreshed");
                                if (e.value == "no") e.value = "yes";
                                else {
                                    e.value = "no";
                                    location.reload();
                                    var e = document.getElementById('ddlProductVariants');
                                    e.selectedIndex = 0; //to fix firefox display issue);
                                }
                            }
                        </script>
                    </div>
                        <!--product reviews-->
                        @Html.Action("ProductReviewOverview", "Catalog", new { productId = Model.Id })
                        @Html.Action("ProductEmailAFriendButton", "Catalog", new { productId = Model.Id })
                        @Html.Action("CompareProductsButton", "Catalog", new { productId = Model.Id })
                        @Html.Action("ShareButton", "Catalog")
                        @Html.Widget("productdetails_overview_bottom")

                    </div>

                    @if (!String.IsNullOrEmpty(Model.FullDescription))
                    {
                        <div class="full-description" itemprop="description">
                            @Html.Raw(Model.FullDescription)
                        </div>
                    }
                    

                </div>
                @Html.Widget("productdetails_before_collateral")
                <div class="product-collateral">
                    @Html.Action("ProductSpecifications", "Catalog", new { productId = Model.Id })
                    @*@Html.Action("ProductTags", "Catalog", new { productId = Model.Id })*@
                    @*@Html.Action("ProductsAlsoPurchased", "Catalog", new { productId = Model.Id })*@
                    @Html.Action("RelatedProducts", "Catalog", new { productId = Model.Id })
                    @Html.Action("RecentlyViewedProductsBlock", "Catalog", new { productThumbPictureSize = 50 })
                </div>
            </div>
        }
        @Html.Widget("productdetails_bottom")
    </div>
    <div id="footerBlueBorder"></div>
</div>
